[1]概要
①メソッド(部品化)のメリット
	・大枠でとらえやすくなってプログラム全体の見通しが良い。
	・メソッド内の処理は限られた範囲のため考えやすい
	・処理を部品化しておけば繰り返し使えて効果的
[1]概要
②イメージ
	・「呼び出し側」と「メソッド側」2つの立場で考えよう。
	・呼び出し側は、メソッド内部の処理詳細を知らなくてもメソッドを使うことができる。
[2]メソッド定義
①定義する場所
	・クラスのブロックの中
[2]メソッド定義
②メソッド名
	・丸括弧の前(左)に記述する
	・ローワーキャメルケースで書く。
	・先頭は小文字
	・その他も小文字
	・単語の連結する場合にその先頭を大文字
③仮引数(パラメータ)
	・メソッド名の後に()丸括弧を書いて、その中に記述する
	・「型名引数名」の形で書く
	・変数と同様に、メソッドのブロックの中で使うことができる
④戻り値
	・メソッド名の前(左側)に戻り値の「値」を記述する
	・returnの後に「戻り値」を記述する
	・変数と同様に、メソッドのブロックの中で使うことができる
⑤ブロック内
	・ステートメントを上から順に実行していく。
	・ブロック内で宣言された変数のスコープ(有効範囲)はこのブロック内となる。
	・returnの後(右側)に記述した値を戻り値として呼び出し側に実行位置が戻る

[3]メソッド呼び出し
①呼び出し方法
	・この記述方法で呼び出す。
		メソッド名(実引数)
②実引数(アーギュメント)
・メソッドが実行されるときの仮引数に設定(代入)される値。
	・これらが指定できる
	・リテラル
	・定数
	・変数
	・式
③実行位置・戻り値
・メソッド呼び出し時には・・・
	・実引数が仮引数に設定する
	・実行位置がメソッドの最初のに移る
	・メソッド側でreturnにより実行位置は、呼び出し側に戻る。
	・呼び出し側が戻り値を受け取るとメソッド呼び出し部分が、戻り値に置き換わる。